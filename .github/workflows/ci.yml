name: CI
on: [push, pull_request]

jobs:
  Lint:
    name: lint check
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Setup php 7.4
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: curl, dom, exif, fileinfo, hash, json, mbstring, mysqli, sodium, openssl, pcre, imagick, xml, zip
          ini-values: assert.exception=1, zend.assertions=1
      - name: Get composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Create cache for composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer
          restore-keys: ${{ runner.os }}-composer
      - name: Install Composer dependencies
        run: composer install --prefer-dist --optimize-autoloader

      - name: lint
        run: composer lint


  Build:
    name: Build check
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Get Node version
        id: node_version
        run: |
          VERSION=`cat .nvmrc`
          echo ::set-output name=value::$VERSION
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.node_version.outputs.value }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn
          restore-keys: ${{ runner.os }}-yarn

      - name: yarn install
        run: yarn install --prefer-offline

      - name: build
        run: |
          yarn build
